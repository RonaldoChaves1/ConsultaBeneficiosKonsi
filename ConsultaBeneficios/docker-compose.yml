services:
  consultabeneficios.api:
    image: ${DOCKER_REGISTRY-}consultabeneficiosapi
    build:
      context: .
      dockerfile: ConsultaBeneficios.API/Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - consultabeneficios.rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - elk

  consultabeneficios.cache:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      - elk

  consultabeneficios.rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    ports:
     - "5672:5672"
     - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - elk

  consultabeneficios.elasticsearch:
    image: elasticsearch:8.15.0
    restart: always
    ports:
      - 9200:9200
    volumes:
      - ~/elasticsearch-data:/usr/share/elasticsearch/data
      - ./create-user.sh:/usr/share/elasticsearch/config/create-user.sh 
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=elasticpass
      - ES_JAVA_OPTS=-Xms4g -Xmx4g
      - cluster.routing.allocation.disk.watermark.low=95%
      - cluster.routing.allocation.disk.watermark.high=98%
      - cluster.routing.allocation.disk.watermark.flood_stage=99%
    entrypoint: ["/bin/bash", "-c", "/usr/share/elasticsearch/config/create-user.sh"]
    networks:
      - elk

  consultabeneficios.kibana:
    image: kibana:8.15.0
    restart: always
    ports:
      - 5601:5601
    depends_on:
      - consultabeneficios.elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://consultabeneficios.elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibanasystem
      - ELASTICSEARCH_PASSWORD=kibanapass
    networks:
      - elk

networks:
  elk:
    driver: bridge